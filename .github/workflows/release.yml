name: Release

on:
  push:
    tags: 'v*'

jobs:
  build:
    name: Create release
    runs-on: macos-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        run: yarn

      - name: Build binary for mac
        run: yarn electron:build:mac --publish never
        env:
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_PASSWORD: ${{ secrets.CSC_PASSWORD }}

      - name: Build binary for win
        run: yarn electron:build:win --publish never

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (intel mac)
        id: upload-release-asset_mac_intel
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist_electron/MarkuPrev-${{ github.ref_name }}-x64.dmg
          asset_name: MarkuPrev-${{ github.ref_name }}-x64.dmg
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (apple silicon mac)
        id: upload-release-asset_mac_apple_silicon
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist_electron/MarkuPrev-${{ github.ref_name }}-arm64.dmg
          asset_name: MarkuPrev-${{ github.ref_name }}-arm64.dmg
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (win)
        id: upload-release-asset_win
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist_electron/MarkuPrev-${{ github.ref_name }}-x64.exe
          asset_name: MarkuPrev-${{ github.ref_name }}-x64.exe
          asset_content_type: application/octet-stream

